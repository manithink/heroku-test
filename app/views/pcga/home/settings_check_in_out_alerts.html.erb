<%= render "settings_navigation_top" %>

<div id="main-outer-wrapper">

  <% unless @care_givers == nil %>
    <%= simple_form_for(@check_in_out_alerts, :url => pcga_update_check_in_out_alerts_path(@check_in_out_alerts.id), method: :patch, validate: true) do |f| %>
    <div class="checkin-out">
      <div class="left">
        <p class="inner-head">Choose <%= change_name("Care Giver")%></p>

        <div id="mcs_container">
          <div class="customScrollBox">
            <div class="container">
              <div class="content">
                <ul class="service-lists">
                 <% @care_givers.each do |caregiver| %>
                 
                 <li>
                  <!-- <div class = "checkbox_new"> -->
                  <% if caregiver.id == (params[:id]).to_i %>
                  <%= check_box_tag "care_giver_ids[]", caregiver.id, :checked => true %>
                  <% else %>
                  <%= check_box_tag "care_giver_ids[]", caregiver.id %>
                  <% end %>
                  <%= link_to "#{ caregiver.first_name+ " "+ caregiver.last_name}", pcga_settings_check_in_out_alerts_path(caregiver.id), class: (params[:id].to_i.eql?(caregiver.id)) ? "active" : "" %>
                  <!-- </div> -->
                </li>
                
                <% end %>
              </ul>
            </div>
          </div>
          <div class="dragger_container">
            <div class="dragger"></div>
          </div>
        </div>
      </div>
    </div>
    <!--left ends here-->
    <!--right starts here-->
    <% unless @check_in_out_alerts == nil %>
    
    <div class="right">
      <p class="inner-head">When confirmed and actual Check-in GPS doesn't match:</p>
      <div class="on-off-block">

        <div class="onoffswitch">
         <%= f.check_box :confirmed_and_actual_notification, {class: "onoffswitch-checkbox", id: "myonoffswitch1"} %>
         <label class="onoffswitch-label" for="myonoffswitch1">
          <div class="onoffswitch-inner"></div>
          <div class="onoffswitch-switch"></div>
        </label>
      </div>




      <p class="fleft">Send notification when distance is less than  <%=
        min_distance(@care_plan_setting)%> meter</p>
      </div>
      <div class="on-off-block">
        <div class="onoffswitch yellow">
          <%= f.check_box :confirmed_and_actual_warning, {class: "onoffswitch-checkbox", id: "myonoffswitch2"} %>
          <label class="onoffswitch-label" for="myonoffswitch2">
            <div class="onoffswitch-inner"></div>
            <div class="onoffswitch-switch"></div>
          </label>
        </div>
        <p class="fleft">Send warning when distance is between  <%=
          min_distance(@care_plan_setting)%> and <%=
          max_distance(@care_plan_setting)%> meter</p>
        </div>
        <div class="on-off-block">
          <div class="onoffswitch red">
            <%= f.check_box :confirmed_and_actual_alert, {class: "onoffswitch-checkbox", id: "myonoffswitch3"} %>
            <label class="onoffswitch-label" for="myonoffswitch3">
              <div class="onoffswitch-inner"></div>
              <div class="onoffswitch-switch"></div>
            </label>
          </div>

          <p class="fleft">Send alert when distance is more than <%=
            max_distance(@care_plan_setting)%> meter</p>
          </div>
          <div class="divider"></div>
          <p class="inner-head">When actual Check-in and Check-out GPS doesn't match:</p>
          <div class="on-off-block">
            <div class="onoffswitch">
              <%= f.check_box :checkin_and_checkout_notification, {class: "onoffswitch-checkbox", id: "myonoffswitch4"} %>
              <label class="onoffswitch-label" for="myonoffswitch4">
                <div class="onoffswitch-inner"></div>
                <div class="onoffswitch-switch"></div>
              </label>
            </div>
            <p class="fleft">Send notification when distance is less than <%=
              min_distance(@care_plan_setting)%> meter</p>
            </div>
            <div class="on-off-block">
              <div class="onoffswitch yellow">
               <%= f.check_box :checkin_and_checkout_warning, {class: "onoffswitch-checkbox", id: "myonoffswitch5"} %>
               <label class="onoffswitch-label" for="myonoffswitch5">
                <div class="onoffswitch-inner"></div>
                <div class="onoffswitch-switch"></div>
              </label>
            </div>
            <p class="fleft">Send warning when distance is between <%=
              min_distance(@care_plan_setting)%> and <%=
              max_distance(@care_plan_setting)%> meter</p>
            </div>
            <div class="on-off-block h-btm">
              <div class="onoffswitch red">
               <%= f.check_box :checkin_and_checkout_alert, {class: "onoffswitch-checkbox", id: "myonoffswitch6"} %>
               <label class="onoffswitch-label" for="myonoffswitch6">
                <div class="onoffswitch-inner"></div>
                <div class="onoffswitch-switch"></div>
              </label>
            </div>

            <p class="fleft">Send alert when distance is more than <%=
              max_distance(@care_plan_setting)%> meter</p>
            </div>
            <div class="row">
             <div class = "checkbox_new">
              <%= f.check_box :send_email %>
              <label class="label_check" for = "check_inout_alert_send_email">Send email notification to</label>
            </div>
            <%= f.text_field :email %> <span class="error1" id = "alert_email"></span>
          </div>
          <div class="row h-btm">
            <div class = "checkbox_new">
              <%= f.check_box :send_sms %>
              <label class="label_check" for = "check_inout_alert_send_sms">
                Send SMS notification to&nbsp;</label>
              </div>
              <%= f.text_field :sms, :title => "Please enter phone number (including country code) with no spaces or hyphens. e.g. '+19057076666'" %><span class="error1" id= "alert_sms"></span>
            </div>
            <div class="row">
              <%= f.submit "Save", value: "Save", class: "farCare-btn submit first-btn" %>
              <!-- <input type="submit" value="Save" class="farCare-btn submit first-btn"> -->
              <%= link_to (button_tag "Cancel",:type => 'button',:class => "farCare-btn cancel"), pcga_home_index_path, :id => "pcgc_settings_edit_cancel" %>
            </div>
            
          <% else %>
            <div class="right">
              No <%= change_name("Care Giver")%>s. You must have atleast one <%= change_name("Care Giver")%> to manage Check in/out Alert
            </div>
            <%end %>
          <% end %>
            <!--right ends here-->
          </div>
          <!--chech in/out ends here-->
        </div>
    <% else %>
            <div class="right">
              No <%= change_name("Care Giver")%>s. You must have atleast one <%= change_name("Care Giver")%> to manage Check in/out Alert
            </div>
    <% end %>

    </div>






    <script type="text/javascript">
     $('.submit').bind('click',function(event){
      if ($('#check_inout_alert_send_email').prop('checked') == true){
       if ($('#check_inout_alert_email').val() == "")
       {
        event.preventDefault();
        $('#alert_email').html("&nbsp Set Email");
          // return false;
        }
        else if(!validateEmail1($('#check_inout_alert_email').val())){
          event.preventDefault();
          $('#alert_email').html("Email not valid");
        }
        else {
         $('#alert_email').html("");

       }
     }

     if ($('#check_inout_alert_send_sms').prop('checked') == true){
       if ($('#check_inout_alert_sms').val() == "")
       {
        event.preventDefault();
        $('#alert_sms').html("&nbsp Set Phone Number");
          // return false;
        }

        else if ($('#check_inout_alert_sms').val().length < 10 ){
         event.preventDefault();
         $('#alert_sms').html("&nbsp min 10 characters");
       }
       else{
        $('#alert_sms').html("");
      }
    }







  });

var myVar=setInterval(function(){myTimer()},1000);

function myTimer()
{
  if ($('#check_inout_alert_send_email').prop('checked') == true){
    $('#check_inout_alert_email').prop('readonly', false);
  }
  else{
    $('#check_inout_alert_email').prop('readonly', true);
  }
  if ($('#check_inout_alert_send_sms').prop('checked') == true){
    $('#check_inout_alert_sms').prop('readonly', false);
  }
  else{
    $('#check_inout_alert_sms').prop('readonly', true);
  }

}

   // making email readonly and vice versa
   // if ($('#check_inout_alert_send_email').parent().attr("class") == "label_check c_on"){
   //  $('#check_inout_alert_email').prop('readonly', false);
   // }
   // else{
   //  $('#check_inout_alert_email').prop('readonly', true);
   // }

   $('#check_inout_alert_send_email').change(function(e){
     if ($("#check_inout_alert_send_email").prop('checked') == true){
      $('#check_inout_alert_email').prop('readonly', false);
    }
    else{
      $('#check_inout_alert_email').prop('readonly', true);
    }
  });

   // making sms number readonly and vice versa

   // if ($('#check_inout_alert_send_sms').parent().attr("class") == "label_check c_on"){
   //  $('#check_inout_alert_sms').prop('readonly', false);
   // }
   // else{
   //  $('#check_inout_alert_sms').prop('readonly', true);
   // }


   $('#check_inout_alert_send_sms').change(function(e){
     if ($('#check_inout_alert_send_sms').prop('checked') == true){
      $('#check_inout_alert_sms').prop('readonly', false);
    }
    else{
      $('#check_inout_alert_sms').prop('readonly', true);
    }
  });




   $("#check_inout_alert_sms").keydown(function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190, 187, 48, 57, 32,189]) !== -1 ||
             // Allow: Ctrl+A
             (e.keyCode == 65 && e.ctrlKey === true) || 
             // Allow: home, end, left, right
             (e.keyCode >= 35 && e.keyCode <= 39)) {
                 // let it happen, don't do anything
               return;
             }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
          e.preventDefault();
        }
      });


  // $("#check_inout_alert_sms").keydown(function (e) {
  //       // Allow: backspace, delete, tab, escape, enter and .
  //       if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
  //            // Allow: Ctrl+A
  //            (e.keyCode == 65 && e.ctrlKey === true) || 
  //            // Allow: home, end, left, right
  //            (e.keyCode >= 35 && e.keyCode <= 39)) {
  //                // let it happen, don't do anything
  //            return;
  //        }
  //       // Ensure that it is a number and stop the keypress
  //       if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
  //           e.preventDefault();
  //       }
  //   });

function validateEmail1(email) {
  var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
  return re.test(email);
}

</script>
<noscript>
  <style type="text/css">
    #mcs_container .customScrollBox{overflow:auto;}
    #mcs_container .dragger_container{display:none;}
    #mcs_container_two .customScrollBox{overflow:auto;}
    #mcs_container_two .dragger_container{display:none;}
  </style>
</noscript>
<script>
  $(function() {
    mCustomScrollbars();
  });

  function mCustomScrollbars(){
  /*
  malihu custom scrollbar function parameters:
  1) scroll type (values: "vertical" or "horizontal")
  2) scroll easing amount (0 for no easing)
  3) scroll easing type
  4) extra bottom scrolling space for vertical scroll type only (minimum value: 1)
  5) scrollbar height/width adjustment (values: "auto" or "fixed")
  6) mouse-wheel support (values: "yes" or "no")
  7) scrolling via buttons support (values: "yes" or "no")
  8) buttons scrolling speed (values: 1-20, 1 being the slowest)
*/
$("#mcs_container").mCustomScrollbar("vertical",300,"easeOutCirc",1.05,"auto","yes","yes",15);
  // $("#mcs_container_two").mCustomScrollbar("vertical",300,"easeOutCirc",1.05,"auto","yes","yes",15);
  // $("#mcs_container_three").mCustomScrollbar("vertical",300,"easeOutCirc",1.05,"auto","yes","yes",15);
  // $("#mcs_container_four").mCustomScrollbar("vertical",300,"easeOutCirc",1.05,"auto","yes","yes",15);

}

/* function to fix the -10000 pixel limit of jquery.animate */
$.fx.prototype.cur = function(){
  if ( this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null) ) {
    return this.elem[ this.prop ];
  }
  var r = parseFloat( jQuery.css( this.elem, this.prop ) );
  return typeof r == 'undefined' ? 0 : r;
}


function LoadNewContent(id,file){
  $("#"+id+" .customScrollBox .content").load(file,function(){
    mCustomScrollbars();
  });
}
</script>


