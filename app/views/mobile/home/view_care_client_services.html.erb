<div id="main-outer-wrapper">

  <%= render "mobile_pcg_home_top_navigation" %>
  <div id="wait" class="overlay-loading">
    <div class="loading-img" ><%= image_tag "loader.GIF", :width => "64", :height => "64" %><br>Loading..</div>
  </div>
  <!-- content starts here -->
  <section id="content-block">
  <%= get_flash_messages %>
    <section class="breadcrum">
      <ul>
        <li><%= link_to "Home", mobile_home_index_path %></li>
        <li class="greater-than"><%= image_tag "greater-than.png", :width => "4", :height => "7" %></li>
        <li>Manage Services of Care Client</li>
      </ul>
    </section>
    <h3 class="clear m_btm-15">Manage Services of <b>(<%= @care_client.fullname%>)</b></h3>
    <div class="row">
      <div class="mob">
        <div class="half-box">
          <div class="row">
            <label>Check-in time:</label> <span><%= @assigned_event.checked_in_at.to_datetime.convert_to(time_zone).strftime("%m/%d/%Y %H:%M:%S %p") rescue nil%></span>
          </div>
         <!--  <div class="row">
            <label>Check-in dist:</label> <span><%#= @check_in_distance %> miles</span>
          </div> -->
        </div>
        <div class="half-box">
          <div class="row">
             <%= mobile_checkout_time(@assigned_event) %>
          </div>
          <!-- <div class="row">
            <label>Check-out dist:</label> <span> <%#= @check_out_distance %> miles</span>
          </div> -->
        </div>
      </div>
    </div>
    <div id="firstpane" class="accordian-list h-btm accordian-details mob view-service-mob" > <!--Code for menu starts here-->
      <form id="check_in_form">
        <% unless @services.empty? %>
        <% i = 0 %>
        <% disable_status = @assigned_event.status.eql?("checked_out") ? true : false %>
        <% @services.each do |service| %>
        <p class="accordian-head category category_<%= i += 1%>"><%= service[0]%> <span class="arrow"></span></p>
        <% j = 0 %>
        <div class="accordian-body">
          <div class="inputs view_care_plan border-block">
           <!-- row starts here -->
           <% service[1].each do |serv_array| %>
           <div class="row">
            <span class="column-two ">
              <% if serv_array[0] %>
              <div class="checkbox_new">
                <% checked_val = @assigned_event.service_record_json["#{service[0]} "]["#{serv_array[0].name}"]["is_completed"] rescue nil%>
                <% current_comment = @assigned_event.service_record_json["#{service[0]} "]["#{serv_array[0].name}"]["msg"] rescue nil%>
                <% option = serv_array[0].get_option(@care_client) rescue nil%>
                <%= check_box_tag "service#{i}#{j+1}", 1, to_boolean(checked_val), class: "service_#{i}_#{j +1} service_#{i} service #{option}", disabled: disable_status %>
                <label for=<%= "service#{i}#{j+1}"%> class="lbl"><%= serv_array[0].name%><%= is_required?(serv_array[0],@care_client.id) %></label>
                <a class="chat to_popup" id="<%= "service#{i}#{j+1}"%>"><%= image_tag((current_comment.blank? ? "chat.png" : "chat-content.png"), :width =>"19", :height => "16") %></a>
                <input type="hidden" value="<%= current_comment %>" id="<%= "service#{i}#{j+1}"%>">
              </div>
              <% j += 1%>
              <% end %>
            </span>
            <span class="column-two last ">
              <% if serv_array[1] %>
              <div class="checkbox_new">
                <% checked_val = @assigned_event.service_record_json["#{service[0]} "]["#{serv_array[1].name}"]["is_completed"] rescue nil %>
                <% current_comment = @assigned_event.reload.service_record_json["#{service[0]} "]["#{serv_array[1].name}"]["msg"] rescue nil%>
                <% option = serv_array[1].get_option(@care_client) rescue nil %>
                <%= check_box_tag "service#{i}#{j+1}", 1, to_boolean(checked_val), class: "service_#{i}_#{j +1} service_#{i} service #{option}", disabled: disable_status %>
                <label for=<%= "service#{i}#{j+1}"%> class="lbl"><%= serv_array[1].name%><%= is_required?(serv_array[1],@care_client.id) %></label>
                <a href="" class="chat to_popup" id="<%= "service#{i}#{j+1}"%>"><%= image_tag((current_comment.blank? ? "chat.png" : "chat-content.png"), :width =>"19", :height => "16") %></a>
                <input type="hidden" value="<%= current_comment %>" id="<%= "service#{i}#{j+1}"%>">
              </div>
              <% j += 1%>
              <% end %>
            </span>
          </div>
          <!-- row ends here -->
          <% end %>
        </div>
      </div>
      <% end %>
      <% end %>

      <!-- Button relatively setted -->
      <div class="row" style="position: absolute; bottom: 0;left:0;">
        <div class="btn-group view-service-btns">
          <%= checkin_checkout_button_group(@assigned_event,"mobile") %>
   <!-- <button type="button" value="Check-out" class="farCare-btn check-out first-btn inactive" disabled="disabled">Check-out</button>
   <a href=""><input type="button" value="Save & Continue" class="farCare-btn save-continue" ></a>
   <a href=""><input type="button" value="Submit" class="farCare-btn save-continue" ></a> -->
 </div>
</div>

<!-- end -->
</form>

<p class="accordian-head  signature-accordion">Signature<span class="arrow"></span></p>
<div class="accordian-body">
  <div class="inputs signature-block">
   <!-- row starts here -->
   <div class="row signature">
    <p class="w-auto"><%= get_full_name(@care_giver) %> has traveled</p>
    <div class="miles-block"> 
      <input type="text" class="miles" value="<%= @assigned_event.distance_travelled %>" />  <p class="w_auto" >miles</p>
    </div>
  </div>
  <div class= "row signature">
    <p class="w-auto"><%= get_full_name(@care_giver) %> has traveled for</p><div class="miles-block">  <input type="text" class="hours" value="<%= @assigned_event.time_travelled %>" />  <p class="w_auto" >hours</p></div>
  </div>

  <!-- row ends here -->
  <!-- row starts here -->
  <div class="row signature last testClass" id="signature-accordion">
    <%= sign(@assigned_event)%>
  </div>

</div>
</div>
<div class="row"><p class="mantory-mob"><span class="mandatory">*</span>Mandatory Fields</p></div>
</div>

<div class="farCare-popup" id="care-clients">
  <a href="" class="close"></a>
  <h4 class="m_btm-0">Add Comment</h4>
  <div class="popup-inpts">
    <p class="error">&nbsp;</p>
    <div class="row m_btm-15">
      <textarea class="comment"></textarea>
    </div>
    <div class="row">
      <div class="btn-group"><input type="button" value="Submit" class="farCare-btn popup-btn first-btn comment-save-btn" /></div>
    </div>
  </div>
</div>

<!-- signature popup start-->
<div class="farCare-popup" id="signature-popup">
  <a class="close"></a>
  <h4 class="m_btm-0">Signature</h4>
  <div class="popup-inpts">
  <p class="error-signature">&nbsp;</p>
  <div class="inputs signature-block">
    <div class="row signature last testClass">
      <!-- <p>I acknowledge that <%= get_full_name(@care_giver) %> has provided me, the above-mentioned services.<span class="canvas-error error">&nbsp;</span></p> -->
      <div class="row">
        <div class="m-signature-pad" id="signature-pad">
          <button data-action="clear" class="button clear">Clear</button>
          <div class="m-signature-pad--body">
            <div class="canvas-div">
            <canvas></canvas>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
    <div class="row">
      <input type="button" value="Submit" class="farCare-btn popup-btn first-btn signature-save-btn" />
    </div>
  </div>
</div>
<!-- signature popup ends -->

<div id="backgroundPopup"></div>
<!-- content starts here --> 
<input type="hidden" value="" id="category_name">
<input type="hidden" value="" id="service_name">
<input type="hidden" value="" id="hidden_id">  
</section>

<script type="text/javascript">
$(document).ready(function(){

    //slides the element with class "accordian-body" when paragraph with class "accordian-head" is clicked 
    $("#firstpane p.accordian-head").click(function()
    {
      if (!$(this).hasClass("active")) {
        $(this).addClass("active").next("div.accordian-body").slideToggle(300);
      } 
      else {
        $(this).removeClass("active").next("div.accordian-body").slideToggle(300);
      }
    });
  });
  var wrapper = document.getElementById("signature-pad"),
  clearButton = wrapper.querySelector("[data-action=clear]"),
  canvas = wrapper.querySelector("canvas"),
  signaturePad;

  signaturePad = new SignaturePad(canvas);
  signaturePad.dotSize = 0.5;
  clearButton.addEventListener("click", function (event) {
    signaturePad.clear();
  });
  function resizeCanvas() {
    var ratio = window.devicePixelRatio || 1;
    canvas.width = canvas.offsetWidth * ratio;
    canvas.height = canvas.offsetHeight * ratio;
    canvas.getContext("2d").scale(ratio, ratio);
  }

  window.onresize = resizeCanvas;

  $(function() {

  previous_status = checkin_checkout.get_current_checkbox_status();
  checkin_checkout.manage_signature_btn();
  checkin_checkout.manage_checkout_btn();
  checkin_checkout.hide_signature();

  $(".to_popup").on('click', function() {
    var self = $(this)
    checkin_checkout.get_current_comment(self)
    setTimeout(function(){
      checkin_checkout.load_comment_popup(self);
    }, 1000); 
    return false;
  });

  $(".close").click(function(e) {
    e.preventDefault();
    checkin_checkout.disable_popup();  // function close pop up
  });

  $(".miles,.hours").keydown(function (e) {
    checkin_checkout.number_only(e);
  });

  $(this).keyup(function(event) {
    if (event.which == 27) { // 27 is 'Ecs' in the keyboard
      checkin_checkout.disable_popup(); // function close pop up
  }
});

  $("div#backgroundPopup").click(function() {
    checkin_checkout.disable_popup();  // function close pop up
  });
  // submit form when save and continue button cliecked
  $(".save-continue").one('click', function(e){
    e.preventDefault();
    var json = JSON.stringify(checkin_checkout.get_service_status_json());
    var url = '/mobile/save_service_status/<%= params[:id]%>?status=continue';
    checkin_checkout.submit_form(url);
  });
  //Function to save comments and trigger validation msgs
  $(".comment-save-btn").click(function(e){
    e.preventDefault();
    var self = $(this);
    checkin_checkout.save_comment(self);
  });

  $(".get-signature").on('click',function(){
      if($(this).hasClass("sigActive")){
        console.log("signature popup activated!!")
        setTimeout(function(){
          checkin_checkout.load_signature_popup();
          resizeCanvas();
        }, 500);
      }
      else{
        if(checkin_checkout.is_checkout_active() == true){
        jAlert('warning',"Already got client approval!", 'Info');
      }
      else{
        jAlert('warning',"Need to complete/comment require service to get client approval!", 'Warning');
      }
      }
    return false;
  });
  //check completion of service to enable checkout button
  $(".service").click(function(event){
    checkin_checkout.check_work_status();
    checkin_checkout.manage_signature_btn();
    checkin_checkout.manage_checkout_btn();
    checkin_checkout.hide_signature();
  })
  $(".signature-save-btn").click(function(){
    checkin_checkout.save_signature();
  });

  $(".check-out").on("click", function(e){
    e.preventDefault();
    var elem = $(this)
    if(checkin_checkout.is_checkout_active() == true ){
      checkin_checkout.getLocation();
      // checkin_checkout.checkout_now();
    }
    else{
      jAlert('warning',"Need to complete/comment require service & get client approval before checkout!", 'Warning');
    }
    
  });

  $(".save-and-submit").on('click', function(e){
  e.preventDefault();
    jConfirm("You can't revert back once you confirmed!","Confirm", function(c){
      if(c){
        window.location = "/mobile/submit_care_service/<%= params[:id]%>"
      }
    });
  });
});

var popupStatus = 0;

var checkin_checkout = {
  get_current_comment: function(self) {
   $(".comment").val("");
   $(".error").empty();
   var serve_name = self.prev().text().replace("*","");
   var cat_name = self.parents().eq(4).prev().text();
   $("#category_name").val(cat_name);
   $("#service_name").val(serve_name);

   var comment_retrieved = self.next().val();
   var hidden_id = self.next().attr('id');
   $("#hidden_id").val(hidden_id);
   if (comment_retrieved != ""){
    comment_retrieved = comment_retrieved.replace(/%%@%/gi,"'");
    $(".comment").val(comment_retrieved);
  }
},
  load_comment_popup: function(item) {
  $('textarea').removeClass().addClass('comment '+$(item).attr('id'))
  if(popupStatus == 0) { 
    $("#care-clients").fadeIn(0500); 
    $("#backgroundPopup").css("opacity", "0.7"); 
    $("#backgroundPopup").fadeIn(0001);
    popupStatus = 1;
  }
},
  disable_popup: function() {
      if(popupStatus == 1) { // if value is 1, close popup
        $("#care-clients-popup").fadeOut("normal");
        $("#signature-popup").fadeOut("normal");
        $("#backgroundPopup").fadeOut("normal");
      popupStatus = 0;  // and set value to 0
    }
  },
  load_signature_popup: function(){
    if(popupStatus == 0) { 
      $("#signature-popup").fadeIn(0500); 
      $("#backgroundPopup").css("opacity", "0.7"); 
      $("#backgroundPopup").fadeIn(0001);
      popupStatus = 1;
    }
  },
  getLocation: function(){
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(this.getPosition,this.errors);         
    } else {                
      checkin_checkout.geolocationError();
    }
  },
  getPosition: function (position) {
    var user_lat  = position.coords.latitude;
    var user_long = position.coords.longitude;
    var addr = $(".check-out").attr("href");
    if (user_lat && user_long){
      $.ajax({
        method: "POST",
        url: '/mobile/save_location/<%= params[:id]%>?status=checkout',
        data: {latitude: user_lat, longitude: user_long}
      }).success(function(msg) {
        checkin_checkout.checkout_now();
      });
    }
  },
  errors: function(error_code) {
    checkin_checkout.geolocationError();     
  },
  geolocationError: function(){
    jConfirm('Location data unavailable, admin will be notified about this. Do you wish to proceed ?','Confirmation', function(c){
      if(c){
        checkin_checkout.checkout_now();
      }
    }); 
  },
  is_service_completed_or_commented: function() {
      var checked;
      var comment;
      var status = 1;
      if($(".required").length > 0){
        $(".required").each(function(){
          checked = $(this).prop("checked");
          comment = $(this).next().next().next().val();
          if(checked == false && comment == ""){
            status = 0;
            return false;
          }
      })
      }
      return status;
    },
  get_service_status_json: function(){
      var service_array = {};
      var category_length = $(".category").length;
      for(i=1;i<=category_length;i++){
        var category_name = $(".category_"+i).text();
        var service_length = $(".service_"+i).length
        tmp = {}
        for(j=1;j<=service_length;j++){
          var service_element = $(".service_"+i+"_"+j);
          var service_name = service_element.next().text().replace('*','');
          var is_required = service_element.next().find('span').hasClass("mandatory")
          var current_comment = service_element.next().next().next().val();
          tmp[service_name] = {}
          require_status = service_element.prop("checked");
          tmp[service_name]["is_completed"] = require_status;
          tmp[service_name]["msg"] = current_comment;
          tmp[service_name]["is_required"] = is_required;
        }
        service_array[category_name] = tmp;
      }
      return service_array;
    },
  submit_form: function(post_url){
      var json_data = checkin_checkout.get_service_status_json();
      var is_status_same = this.check_work_status();

      var need_signature_deletion = (is_status_same == false) ? true : false

      var distance = $(".miles").val();
      var time = $(".hours").val();
      $.ajax({
        method: "POST",
        url: post_url,
        dataType: 'script',
        data: {service_record_json: json_data, distance: distance, time: time, need_signature_deletion: need_signature_deletion}
      }).success(function(msg) {
        window.location = "/mobile/home"
      });
    },
  save_comment: function(self){
     var className = self.parent().parent().prev().children('textarea').attr('class').split(' ')[1]
      var service_record = checkin_checkout.get_service_status_json();
      var comment = $.trim($(".comment").val());
      var hidden_id =  $("#hidden_id").val();
      console.log($(this));
      var service_category = $("#category_name").val();
      var service_name = $("#service_name").val().replace('*','');
      if(comment){
        $.ajax({
          method: "POST",
          url: "/mobile/save_comment/<%= params[:id]%>" ,
          data: {comment: comment, category: service_category, service: service_name, hidden_id: hidden_id, service_record_json: service_record}
        }).success(function(msg) {
          // alert(msg)
          $(".close").click();
          checkin_checkout.manage_signature_btn();
          $('a#'+className).children('img').attr('src','/assets/chat-content.png');
        });
      }
      else{
        $(".error").html("Comment can't be empty");
      }
    },
  is_signature_active: function(){
      status = this.is_service_completed_or_commented();
      signature = this.is_work_approved();
      is_status_same = this.check_work_status();
      is_active = ((status == 1 && signature == 0  ) || (is_status_same == false && status == 1 && signature == 1))
      return is_active
    },
  manage_signature_btn: function(){
      if(this.is_signature_active() == true){
        $(".get-signature").removeClass("inactive").addClass("sigActive");
      }
      else{
        $(".get-signature").addClass("inactive").removeClass("sigActive");
      }
  },
  save_signature: function(){
    if(document.getElementById("signature-pad") != null && !signaturePad.isEmpty()){
      var sign_data = signaturePad.toDataURL();
      var service_record = checkin_checkout.get_service_status_json();
      $.ajax({
        method: "POST",
        url: "/mobile/save_mobile_signature/<%= params[:id]%>",
        data: {signature: sign_data, service_record_json: service_record}
      }).success(function(data){
        checkin_checkout.disable_popup();
        $("#signature-accordion").empty().html(data);
        previous_status = checkin_checkout.get_current_checkbox_status();
        checkin_checkout.manage_signature_btn();
        checkin_checkout.manage_checkout_btn();
        // jAlert('warning',"Successfully saved!", 'Info');
      });
    }
    else{
      $(".error-signature").text("Signature can't be blank");
    }
  },
  get_current_checkbox_status: function(){
    var status = [];
    $("input:checkbox").each(function() {
        status.push(this.checked)
    });
    return status;
  },
  check_work_status: function(){
    var current_status = this.get_current_checkbox_status();
    var is_same = (previous_status.length == current_status.length) && (previous_status.every(function(element, index) {
        return element === current_status[index]
      }));
    return is_same
  },
  is_work_approved: function(){
    return $(".sign").length
  },
  is_checkout_active: function(){
    var status = this.is_service_completed_or_commented();
    var signature = this.is_work_approved();
    var is_status_same = this.check_work_status();
    is_active = (is_status_same == true && status == 1 && signature == 1)
      return is_active
  },
  manage_checkout_btn: function(){
    if(this.is_checkout_active() == true){
      $(".check-out").removeClass("inactive").addClass('checkoutActive');
    }
    else{
       $(".check-out").addClass("inactive").removeClass('checkoutActive');
    }
  },
  checkout_now: function(){
    var url = '/mobile/save_service_status/<%= params[:id]%>?status=checked_out';
    this.submit_form(url);
  },
  need_signature_removal: function(){
    var status = this.is_service_completed_or_commented();
    var signature = this.is_work_approved();
    var is_status_same = this.check_work_status();
    var is_active = ((status == 0) || (is_status_same == false))
    return is_active
  },
  hide_signature: function(){
    if(this.need_signature_removal() == true){
      console.log("remove")
      $(".sign").hide();
      $(".noSignature").empty().html('<span class="mandatory">Client not yet approved your work!</span>')
    }
    else{
      console.log("redraw")
      $(".noSignature").empty();
      $(".sign").show();
    }
  },
  number_only: function(e){
    if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
      // Allow: Ctrl+A
        (e.keyCode == 65 && e.ctrlKey === true) || 
        // Allow: home, end, left, right
        (e.keyCode >= 35 && e.keyCode <= 39)) {
          // let it happen, don't do anything
        return;
      }
      // Ensure that it is a number and stop the keypress
      if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
        e.preventDefault();
      }
    }

};
</script>


